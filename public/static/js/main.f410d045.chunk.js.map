{"version":3,"sources":["components/Login.js","components/Signup.js","components/ProjectCard.js","components/ProjectsHome.js","components/TaskCard.js","components/Board.js","components/useLocalStorage.js","components/Project.js","components/Task.js","components/NavBar.js","components/App.js","index.js"],"names":["Login","setCurrentUser","setUserProjects","history","useHistory","useState","username","email","password","formData","setFormData","handleChange","e","target","name","value","className","Col","sm","Form","onSubmit","preventDefault","configObj","method","headers","body","JSON","stringify","fetch","then","resp","ok","json","user","console","log","projects","push","errors","error","Group","controlId","Control","placeholder","type","onChange","Button","variant","exact","to","Signup","md","lg","ProjectCard","project","handleShowUpdate","deleteHandler","setActiveProject","setTaskList","Card","style","width","height","Body","Row","Title","Text","description","onClick","tasks","id","ProjectsHome","currentUser","addNewProject","userProjects","show","setShow","showUpdateForm","setShowUpdateForm","hasName","setHasName","hasDescription","setHasDescription","user_id","updateForm","setUpdateForm","renderProjects","map","handleClose","handleCloseUpdate","changeHandler","changeUpdateHandler","filteredProjects","filter","submitHandler","length","postConfig","res","responseProjectObj","editHandler","newProjects","r","data","Container","Modal","onHide","Header","closeButton","color","Footer","categoryStyle","viewStyle","deleteStyle","TaskCard","task","index","setActiveTask","handleTaskDelete","showDelete","setShowDelete","handleClick","draggableId","String","provided","snapshot","ref","innerRef","draggableProps","maxWidth","maxHeight","minWidth","minHeight","opacity","isDragging","boxShadow","onMouseEnter","onMouseLeave","summary","dragHandleProps","xmlns","fill","class","viewBox","fill-rule","d","category_name","boardStyle","taskContainer","Board","taskCategories","taskList","boardColumns","uuidv4","label","items","backlog","todo","progress","review","done","columns","setColumns","useEffect","onDragEnd","result","destination","source","droppableId","sourceColumn","destColumn","sourceItems","destItems","splice","removed","newList","findIndex","column","copiedItems","updatedList","Object","entries","columnId","droppableProps","isDraggingOver","item","useLocalStorage","key","initialValue","window","localStorage","getItem","parse","storedValue","setStoredValue","valueToStore","Function","setItem","Project","activeProject","newCollaborator","setNewCollaborator","categories","setCategories","showCollabForm","setShowCollabForm","showTaskForm","setShowTaskForm","details","category_id","project_id","taskForm","setTaskForm","hasUser","setHasUser","handleCloseCollabForm","handleCloseTaskForm","submitUser","userInfo","find","userObj","teamData","submitTask","handleTaskFormChange","category","cat","parseInt","optionList","toUpperCase","as","Select","detailStyle","Task","activeTask","showTaskform","hasSummary","taskUpdateForm","setTaskUpdateForm","changeTaskHandler","submitTaskUpdate","NavBar","Navbar","expand","fluid","Brand","go","Toggle","aria-controls","Offcanvas","aria-labelledby","placement","Nav","App","path","projectObj","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f410d045.chunk.js","sourcesContent":["import { Link, useHistory } from \"react-router-dom\"\nimport {Form, Button, Col} from 'react-bootstrap'\nimport { useState } from 'react'\n\nfunction Login({setCurrentUser, setUserProjects}) {\n  const history = useHistory();\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const configObj = {\n      method: \"POST\",\n      headers: {\"Content-Type\": \"application/json\"},\n      body: JSON.stringify(formData),\n    };\n\n  \n    fetch(\"/login\", configObj)\n    .then((resp) => {\n      if (resp.ok) {\n        resp.json().then((user) => {\n          setCurrentUser(user)\n          console.log(user.projects)\n          setUserProjects(user?.projects)\n        })\n        history.push(\"/home\"); \n      } else {\n        resp.json().then((errors) => {\n          console.error(errors);\n        });\n      }\n    });\n  };\n\n\n    return (\n      <div className=\"text-center d-flex flex-column align-items-center\">\n\n        <h1 className=\"title my-5\">Welcome to KanbanD!</h1>\n        <br/>\n\n        <Col sm={8}>\n          <Form onSubmit={handleSubmit}>\n            \n            <Form.Group className=\"mb-3\" controlId=\"formBasicUsername\">\n              <Form.Control placeholder=\"Username\" type=\"text\" name=\"username\" value={formData.username} onChange={(e) => handleChange(e)}/>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Control placeholder=\"Password\" type=\"password\" name=\"password\" value={formData.password} onChange={(e) => handleChange(e)}/>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Control placeholder=\"Email\" type=\"email\" name=\"email\" value={formData.email} onChange={(e) => handleChange(e)}/>\n            </Form.Group>\n\n            <br></br>\n\n            <Button variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n\n          </Form>\n          <br></br>\n        </Col>\n        <Link exact to=\"/signup\">Don't have an account? Create one here</Link>\n\n      </div>\n    );\n}\n\nexport default Login;","import { Form, Button, Col } from 'react-bootstrap'\nimport { useState } from 'react'\nimport { useHistory, Link } from \"react-router-dom\"\n\n\nfunction Signup({setCurrentUser}) {\n  const history = useHistory();\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value});\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const configObj = {\n      method: \"POST\",\n      headers: {\"Content-Type\": \"application/json\"},\n      body: JSON.stringify(formData),\n    };\n\n    fetch(\"/signup\", configObj)\n    .then((resp) => {\n      if (resp.ok) {\n        resp.json().then((user) => {\n          setCurrentUser(user);\n        })\n        //reroutes to home landing page\n        history.push(\"/\"); \n      } else {\n        resp.json().then((errors) => {\n          console.error(errors);\n        });\n      }\n    });\n  };\n\n  return (\n    <div className=\"text-center d-flex flex-column align-items-center\">\n\n      <h2 className=\"my-5\">Create your account</h2>\n      <br/>\n      <Col sm={8} md={6} lg={4}>\n        <Form onSubmit={handleSubmit}>\n            \n            <Form.Group className=\"mb-3\" controlId=\"formBasicUsername\">\n              <Form.Control placeholder=\"Username\" type=\"text\" name=\"username\" value={formData.username} onChange={(e) => handleChange(e)} />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Control placeholder=\"Password\" type=\"password\" name=\"password\" value={formData.password} onChange={(e) => handleChange(e)} />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Control placeholder=\"Email\" type=\"email\" name=\"email\" value={formData.email} onChange={(e) => handleChange(e)}/>\n            </Form.Group>\n\n            <br></br>\n\n            <Button variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n\n        </Form>\n      </Col>\n      <br/>\n      <Link to=\"/\">Back to Log in Page</Link>\n\n    </div>\n  );\n}\n\nexport default Signup;","import React from \"react\";\nimport { Button, Card, Col, Row } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction ProjectCard({project, handleShowUpdate, deleteHandler, setActiveProject, setTaskList}) {\n    const history = useHistory()\n    function viewProject() {\n        setActiveProject(project)\n        console.log(project)\n        setTaskList(project.tasks)\n        history.push('/project')\n    }\n\n    return (\n        <Card className=\"my-5 mx-3\" style={{width: '20rem', height: '15rem'}}>\n            <Card.Body className=\"card-style\">\n                <Row>\n                    <Card.Title className=\"my-3\">{project.name}</Card.Title>\n                    <Card.Text>{project.description}</Card.Text>\n                </Row>\n                <Row>\n                    <Col className=\"d-flex justify-content-center\">\n                        <Button variant=\"primary\" onClick={viewProject}>View</Button>\n                    </Col>\n                    <Col className=\"d-flex justify-content-center\">\n                        <Button variant=\"primary\" onClick={() => handleShowUpdate(project.name, project.description, project.id)}>Edit</Button>\n                    </Col>\n                    <Col className=\"d-flex justify-content-center\">\n                        <Button variant=\"danger\" onClick={() => deleteHandler(project.id)}>Delete</Button>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default ProjectCard;","import React, { useState } from \"react\";\nimport { Button, Col, Container, Row, Modal, Form } from \"react-bootstrap\";\nimport ProjectCard from \"./ProjectCard\";\n\nfunction ProjectsHome({currentUser, addNewProject, userProjects, setUserProjects, setActiveProject, setTaskList}) {\n    const [show, setShow] = useState(false)\n    const [showUpdateForm, setShowUpdateForm] = useState(false)\n    const [hasName, setHasName] = useState(true)\n    const [hasDescription, setHasDescription] = useState(true)\n    const [formData, setFormData] = useState({\n        name: '',\n        description: '',\n        user_id: ''\n    })\n\n    const [updateForm, setUpdateForm] = useState({\n        name: '',\n        description: '',\n        user_id: ''\n    })\n    \n    const renderProjects = userProjects.map(project => <ProjectCard\n            key={project.id}\n            project={project}\n            handleShowUpdate={handleShowUpdate}\n            deleteHandler={deleteHandler}\n            setActiveProject={setActiveProject}\n            setTaskList={setTaskList} />)\n\n    function handleShow() {\n        setShow(true)\n        setFormData({...formData, [\"user_id\"]: currentUser.id})\n    }\n\n    function handleClose() {\n        setShow(false)\n    }\n\n    function handleShowUpdate(name, description, id) {\n        setUpdateForm({\n            name: name,\n            description: description,\n            id: id,\n            user_id: currentUser.id\n        })\n        setShowUpdateForm(true)\n    }\n\n    function handleCloseUpdate() {\n        setShowUpdateForm(false)\n    }\n\n    function changeHandler(e) {\n        setFormData({...formData, [e.target.name] : e.target.value})\n    }\n\n    function changeUpdateHandler(e) {\n        setUpdateForm({...updateForm, [e.target.name]: e.target.value})\n    }\n\n    function deleteHandler(id) {\n        const filteredProjects = userProjects.filter(project => project.id !== id)\n        console.log(filteredProjects)\n        setUserProjects([...filteredProjects])\n        fetch(`/projects/${id}`, {method: \"DELETE\"})\n    }\n\n    function submitHandler(e) {\n        e.preventDefault();\n        \n        if (formData.name.length === 0 || formData.description.length === 0) {\n            formData.name === '' ? setHasName(false) : setHasName(true)\n            formData.description === '' ? setHasDescription(false) : setHasDescription(true)\n            console.log(\"trying to submit baaaad data ='(\");\n        } else {            \n            console.log('trying to create a new project.');\n            console.log(formData)\n            const postURL = '/projects';\n            const postConfig = {\n                method: 'POST',\n                headers: {'Content-Type':'application/json'},\n                body: JSON.stringify(formData)\n            };\n            fetch(postURL, postConfig)\n            .then(res => res.json())\n            .then(responseProjectObj => {\n                addNewProject(responseProjectObj)\n                setFormData({\n                    name: '',\n                    description: '',\n                    user_id: ''\n                })\n                setHasName(true)\n                setHasDescription(true)\n            });\n            handleClose(); \n        }               \n    }\n\n    function editHandler() {\n        if (updateForm.name !== '' && updateForm.description !== '') {\n            const newProjects = userProjects.map(project => {\n                if (project.id === updateForm.id) {\n                    return {\n                        name: updateForm.name,\n                        description: updateForm.description,\n                        id: updateForm.id,\n                        user_id: currentUser.id\n                    }\n                } else {\n                    console.log(project)\n                    return project\n                }\n            })\n            console.log(newProjects)\n            setUserProjects([...userProjects], newProjects)\n            fetch(`/projects/${updateForm.id}`, {\n                method: 'PATCH',\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(updateForm)\n            })\n            .then(r => r.json())\n            .then(data => {\n                console.log(data)\n                setTaskList(data.tasks)\n                handleCloseUpdate()\n            })\n        } else {\n            console.log(\"cannot apply changes\")\n        }\n    }\n\n    return (\n        <Container>\n            <Row>\n                <Col lg={12}>\n                    <h1 className=\"text-center my-5\">YOUR PROJECTS</h1>\n                </Col>\n            </Row>\n            <Row className=\"proj-btn\" style={{\"marginBottom\": \"35px\"}}>\n                <Col className=\"d-flex justify-content-end\">\n                    <Button onClick={handleShow}>Add Project</Button>\n                </Col>\n            </Row>\n            <Row className=\"d-flex justify-content-center\">\n                {renderProjects}\n            </Row>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Create New Project</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={submitHandler}>\n                        <Form.Control type=\"text\" name=\"name\" placeholder=\"Project Name\" onChange={changeHandler} value={formData.name}/>\n                        {hasName ? null : <Form.Text className='invalid-input' style={{color: 'red'}} >You must enter a name.</Form.Text>}\n                        <Form.Control type=\"text\" name=\"description\" placeholder=\"Add a Short Description\" onChange={changeHandler} value={formData.description}/>\n                        {hasDescription ? null : <Form.Text className='invalid-input' style={{color: 'red'}} >You must enter a description.</Form.Text>}\n                    </Form>                        \n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button type=\"submit\" variant=\"primary\" onClick={submitHandler}>\n                        Create Project\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n            <Modal show={showUpdateForm} onHide={handleCloseUpdate}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Edit Your Details</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={editHandler}>\n                        <Form.Text className='invalid-input' >Album Name</Form.Text>\n                        <Form.Control type=\"text\" name=\"name\" placeholder=\"album name\" onChange={changeUpdateHandler} value={updateForm.name}/>\n                        {updateForm.name !== '' ? null : <Form.Text className='invalid-input' style={{color: 'red'}} >You must enter a name.</Form.Text>}\n                        <Form.Text className='invalid-input' >Description</Form.Text>\n                        <Form.Control type=\"text\" name=\"description\" placeholder=\"description\" onChange={changeUpdateHandler} value={updateForm.description}/>\n                        {updateForm.description !== '' ? null : <Form.Text className='invalid-input' style={{color: 'red'}} >You must enter a description.</Form.Text>}\n                    </Form>                        \n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleCloseUpdate}>\n                        Close\n                    </Button>\n                    <Button type=\"submit\" variant=\"primary\" onClick={editHandler}>\n                        Apply Changes\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </Container>\n    )\n}\n\nexport default ProjectsHome;","import React, { useState } from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport { Button, Card, Col, Row } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nconst categoryStyle = {\n    \"backgroundColor\": \"lightblue\",\n    \"minHeight\": \"1.5rem\",\n    \"maxWidth\": \"4rem\",\n    \"borderRadius\": \"15px\",\n    \"fontSize\": \"12px\",\n    \"display\": \"flex\",\n    \"justifyContent\": \"center\",\n    \"alignItems\": \"center\",\n    \"marginLeft\": \"30px\"\n}\n\nconst viewStyle = {\n    \"height\": \"1.5rem\",\n    \"display\": \"flex\",\n    \"justifyContent\": \"center\",\n    \"alignItems\": \"center\",\n    \"fontSize\": \"12px\"\n}\n\nconst deleteStyle = {\n    \"height\": \"18px\",\n    \"maxWidth\": \"5px\",\n    \"position\": \"absolute\",\n    \"top\": \"-5px\",\n    \"left\": \"-5px\",\n    \"display\": \"flex\",\n    \"justifyContent\": \"center\",\n    \"alignItems\": \"center\",\n    \"borderRadius\": \"100%\",\n    \"fontSize\": \"11px\"\n}\n\nfunction TaskCard({task, index, setActiveTask, handleTaskDelete}) {\n    const history = useHistory()\n    const [showDelete, setShowDelete] = useState(false)\n\n    function handleClick() {\n        history.push('/task')\n        setActiveTask(task)\n    }\n\n    return (\n        <Draggable key={String(task.id)} draggableId={String(task.id)} index={index}>\n            {(provided, snapshot) => {\n                return  (\n                    <Card\n                        className=\"my-1\"\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        // {...provided.dragHandleProps}\n                        style={{\n                            maxWidth: '12rem',\n                            maxHeight: '7rem',\n                            minWidth: '12rem',\n                            minHeight: '7rem',\n                            ...provided.draggableProps.style,\n                            opacity: snapshot.isDragging ? \"70%\": \"100%\",\n                            boxShadow: snapshot.isDragging ? '' : '3px 3px #434743',\n                            color: \"black\"\n                        }}\n                        onMouseEnter={() => setShowDelete(true)}\n                        onMouseLeave={() => setShowDelete(false)}\n                    >\n                        {showDelete ? <Button variant=\"danger\" onClick={() => handleTaskDelete(task.id)} style={deleteStyle}>X</Button> : null}\n                        <Card.Body className=\"d-flex flex-column justify-content-between\">\n                            <Row>\n                                <Col sm={10}>\n                                    <Card.Title style={{\"fontSize\": \"15px\"}}>\n                                        {task.summary}\n                                    </Card.Title>\n                                </Col>\n                                <Col className=\"d-flex flex-row-reverse\" sm={2}>\n                                    <div {...provided.dragHandleProps} style={{\"position\": \"absolute\", \"top\": \"5px\"}}>\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-list\" viewBox=\"0 0 16 16\">\n                                            <path fill-rule=\"evenodd\" d=\"M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\"/>\n                                        </svg>\n                                    </div>\n                                </Col>\n                            </Row>\n                            <Row className=\"d-flex flex-row-reverse\">\n                                <Col sm={8} className=\"\">\n                                    <div style={categoryStyle}>\n                                        {task.category_name}\n                                    </div>\n                                </Col>\n                                <Col sm={4}>\n                                    <Button style={viewStyle} onClick={handleClick}>View</Button>\n                                </Col>\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                )\n            }}\n        </Draggable>\n    )\n}\n\nexport default TaskCard;","import React, { useEffect, useState } from \"react\";\nimport { Col, Row, Container } from \"react-bootstrap\";\nimport TaskCard from \"./TaskCard\";\nimport { DragDropContext, Droppable} from \"react-beautiful-dnd\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst boardStyle = {\n    \"backgroundColor\": \"#354a38\",\n    \"width\": \"100%\",\n    \"height\": \"65vh\",\n    \"border\": \"1px solid black\",\n    \"borderRadius\": \"15px\"\n}\n\nconst colStyle = {\n    \"borderLeft\": \"1px solid black\",\n    \"borderRight\": \"1px solid black\",\n    \"height\": \"60vh\",\n    \"flexDirection\": \"column\"\n}\n\nconst taskContainer = {\n    \"padding\": \"4px\",\n    \"width\": \"210px\",\n    \"marginRight\": \"10px\",\n    \"marginLeft\": \"10px\",\n    \"height\": \"500px\",\n    \"overflowY\": \"scroll\",\n    \"overflowX\": \"hidden\",\n    \"scrollbarWidth\": \"none\",\n    \"display\": 'flex',\n    \"flexDirection\": \"column\",\n    \"alignItems\": \"center\",\n    \"borderRadius\": \"10px\"\n}\n\nfunction Board({setActiveTask, taskCategories, setTaskList, taskList}) {\n    const boardColumns = {\n        [uuidv4()]: {\n            name: \"BACKLOG\",\n            label: \"backlog\",\n            items: taskCategories.backlog\n        },\n        [uuidv4()]: {\n            name: \"TO DO\",\n            label: \"todo\",\n            items: taskCategories.todo\n        },\n        [uuidv4()]: {\n            name: \"IN PROGRESS\",\n            label: \"progress\",\n            items: taskCategories.progress\n        },\n        [uuidv4()]: {\n            name: \"IN REVIEW\",\n            label: \"review\",\n            items: taskCategories.review\n        },\n        [uuidv4()]: {\n            name: \"DONE\",\n            label: \"done\",\n            items: taskCategories.done\n        }\n    }\n    const [columns, setColumns] = useState(boardColumns)\n    \n    useEffect(() => {\n        setColumns(boardColumns)\n    }, [taskCategories])\n\n    const onDragEnd = (result, columns, setColumns) => {\n        if (!result.destination) return;\n\n        const {source, destination} = result;\n        if (source.droppableId !== destination.droppableId) {\n            const sourceColumn = columns[source.droppableId]\n            const destColumn = columns[destination.droppableId]\n            const sourceItems = [...sourceColumn.items]\n            const destItems = [...destColumn.items]\n            const [removed] = sourceItems.splice(source.index, 1)\n            destItems.splice(destination.index, 0, removed)\n            setColumns({\n                ...columns,\n                [source.droppableId]: {\n                    ...sourceColumn,\n                    items: sourceItems\n                },\n                [destination.droppableId]: {\n                    ...destColumn,\n                    items: destItems\n                }\n            })\n            assignProgress(removed, destColumn.label)\n        } else {\n            const column = columns[source.droppableId]\n            const copiedItems = [...column.items]\n            const [removed] = copiedItems.splice(source.index, 1);\n            copiedItems.splice(destination.index, 0, removed)\n            setColumns({\n                ...columns,\n                [source.droppableId]: {\n                    ...column,\n                    items: copiedItems\n                }\n            })\n        }\n    }\n\n    function assignProgress(task, label) {\n        fetch(`/tasks/${task.id}`, {\n            method: 'PATCH',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({['progress']: label})\n        })\n        .then(res => res.json())\n        .then(data => {\n            const newList = taskList\n            newList.splice(newList.findIndex(task => task.id === data.id), 1, data)\n            setTaskList([...newList])\n        })\n    }\n\n    function handleTaskDelete(id) {\n        const updatedList = taskList.filter(task => task.id !== id)\n        setTaskList(updatedList)\n        fetch(`/tasks/${id}`, {method: 'DELETE'})\n    }\n\n    return (\n        <Container style={boardStyle}>\n            <div style={{\"display\": \"flex\", \"justifyContent\": \"center\", \"height\": \"100%\"}}>\n                <DragDropContext onDragEnd={result => onDragEnd(result, columns, setColumns)}>\n                    {Object.entries(columns).map(([columnId, column], index) => {\n                        return (\n                            <div key={columnId} style={{\"display\": \"flex\", \"flexDirection\": \"column\", \"alignItems\": \"center\", \"justifyContent\": \"center\", \"textAlign\": \"center\"}}>\n                                <h2>\n                                    {column.name}\n                                </h2>\n                                <div style={{\"margin\": \"8%\"}}>\n                                    <Droppable droppableId={columnId} key={columnId}>\n                                        {(provided, snapshot) => {\n                                            return (\n                                                <div\n                                                    className=\"board-col\"\n                                                    {...provided.droppableProps}\n                                                    ref={provided.innerRef}\n                                                    style={{\n                                                        \"background\": snapshot.isDraggingOver ? \"lightblue\" : \"#567a5b\",\n                                                        ...taskContainer\n                                                    }}\n                                                >\n                                                    {column.items.map((item, index) => {\n                                                        return (\n                                                            <TaskCard task={item} index={index} setActiveTask={setActiveTask} handleTaskDelete={handleTaskDelete} />\n                                                        )\n                                                    })}\n                                                    {provided.placeholder}\n                                                </div>\n                                            )\n                                        }}\n                                    </Droppable>\n                                </div>\n                            </div>\n                        )\n                    })}\n                </DragDropContext>\n            </div>\n        </Container>\n    )\n}\n\nexport default Board;","import { useState } from \"react\";\n\nfunction useLocalStorage(key, initialValue) {\n    // State to store our value\n    // Pass initial state function to useState so logic is only executed once\n    const [storedValue, setStoredValue] = useState(() => {\n        try {\n        // Get from local storage by key\n        const item = window.localStorage.getItem(key);\n        // Parse stored json or if none return initialValue\n        return item ? JSON.parse(item) : initialValue;\n        } catch (error) {\n        // If error also return initialValue\n        console.log(error);\n        return initialValue;\n        }\n    });\n    // Return a wrapped version of useState's setter function that ...\n    // ... persists the new value to localStorage.\n    const setValue = (value) => {\n        try {\n        // Allow value to be a function so we have same API as useState\n        const valueToStore =\n            value instanceof Function ? value(storedValue) : value;\n        // Save state\n        setStoredValue(valueToStore);\n        // Save to local storage\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\n        } catch (error) {\n        // A more advanced implementation would handle the error case\n        console.log(error);\n        }\n    };\n    return [storedValue, setValue];\n}\n\nexport default useLocalStorage;","import React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col, Button, Modal, Form } from \"react-bootstrap\";\nimport Board from \"./Board\";\nimport useLocalStorage from \"./useLocalStorage\";\n\nfunction Project({activeProject, setActiveTask, taskList, setTaskList}) {\n    const [newCollaborator, setNewCollaborator] = useState('')\n    const [categories, setCategories] = useState([])\n    const [showCollabForm, setShowCollabForm] = useState(false)\n    const [showTaskForm, setShowTaskForm] = useState(false)\n    const [taskForm, setTaskForm] = useState({\n        summary: '',\n        details: '',\n        progress: 'backlog',\n        category_name: '',\n        category_id: '',\n        project_id: ''\n    })\n    const [hasUser, setHasUser] = useState(true)\n    console.log(taskList)\n    const taskCategories = {\n        backlog: taskList.filter(task => task.progress === 'backlog'),\n        todo: taskList.filter(task => task.progress === 'todo'),\n        progress: taskList.filter(task => task.progress === 'progress'),\n        review: taskList.filter(task => task.progress === 'review'),\n        done: taskList.filter(task => task.progress === 'done')\n    }\n\n    useEffect(() => {\n        fetch('/categories')\n        .then(res => res.json())\n        .then(data => setCategories(data))\n    }, [])\n\n    function handleCloseCollabForm() {\n        setShowCollabForm(false)\n    }\n\n    function handleShowCollabForm() {\n        setShowCollabForm(true)\n    }\n\n    function handleCloseTaskForm() {\n        setShowTaskForm(false)\n    }\n\n    function handleShowTaskForm() {\n        setTaskForm({...taskForm, [\"project_id\"]: activeProject.id})\n        setShowTaskForm(true)\n    }\n\n    function submitUser(e) {\n        e.preventDefault()\n        if (newCollaborator === '') {\n            setHasUser(false)\n        } else {\n            setHasUser(true)\n            fetch(\"/users\")\n            .then(res => {\n                if (res.ok) {\n                    res.json()\n                    .then(data => {\n                        console.log(data)\n                        const userInfo = data.find(userObj => userObj.username === newCollaborator)\n                        console.log(userInfo.id)\n                        const teamData = {\n                            \"user_id\": userInfo.id,\n                            \"project_id\": activeProject.id\n                        }\n                        if (userInfo) {\n                            fetch(\"/teams\", {\n                                method: 'POST',\n                                headers: {'Content-Type':'application/json'},\n                                body: JSON.stringify(teamData)\n                            })\n                            .then(res => res.json())\n                            .then(() => {\n                                setNewCollaborator('')\n                                handleCloseCollabForm()\n                            })\n                        }\n                    })\n                }\n            })\n        }\n    }\n\n    function submitTask() {\n        fetch(\"/tasks\", {\n            method: 'POST',\n            headers: {'Content-Type':'application/json'},\n            body: JSON.stringify(taskForm)\n        })\n        .then(res => res.json())\n        .then(data => {\n            setTaskList([...taskList, data])\n            setTaskForm({\n                summary: '',\n                details: '',\n                progress: 'backlog',\n                category_name: '',\n                category_id: '',\n                project_id: ''\n            })\n            handleCloseTaskForm()\n        })\n    }\n\n    function handleCollabFormChange(e) {\n        setNewCollaborator(e.target.value)\n    }\n\n    function handleTaskFormChange(e) {\n        if (e.target.name === \"category_id\") {\n            const category = categories.find(cat => cat.id === parseInt(e.target.value));\n            setTaskForm({...taskForm, ['category_name']: category.name, [e.target.name]: e.target.value})\n        } else {\n            setTaskForm({...taskForm, [e.target.name]: e.target.value})\n        }\n    }\n\n    const optionList = categories.map(category => <option key={category.id} value={category.id}>{category.name}</option>)\n\n    return (\n        <Container>\n            <Row>\n                <Col lg={12}>\n                    <h1 className=\"text-center my-4\">{activeProject.name.toUpperCase()}</h1>\n                </Col>\n            </Row>\n            <Row className=\"proj-btn\" style={{\"marginBottom\": \"35px\"}}>\n                <Col className=\"d-flex justify-content-end\">\n                    <Button onClick={handleShowCollabForm}>Add Member</Button>\n                </Col>\n            </Row>\n            <Row>\n                <Board setActiveTask={setActiveTask} optionList={optionList} taskCategories={taskCategories} setTaskList={setTaskList} taskList={taskList} />\n            </Row>\n            <Row>\n                <Col className=\"d-flex justify-content-end\">\n                    <Button className=\"my-4\" onClick={handleShowTaskForm}>Add Task</Button>\n                </Col>\n            </Row>\n\n            <Modal show={showCollabForm} onHide={handleCloseCollabForm}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Add a Collaborator</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={submitUser}>\n                        <Form.Control type=\"text\" name=\"username\" placeholder=\"Username\" onChange={handleCollabFormChange} value={newCollaborator}/>\n                        {hasUser ? null : <Form.Text className='invalid-input' style={{color: 'red'}} >You must enter a name.</Form.Text>}\n                    </Form>                        \n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleCloseCollabForm}>\n                        Close\n                    </Button>\n                    <Button type=\"submit\" variant=\"primary\" onClick={submitUser}>\n                        Add User\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n            <Modal show={showTaskForm} onHide={handleCloseTaskForm}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Add a Task</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={submitTask}>\n                        <Form.Text className='invalid-input' >Task Summary</Form.Text>\n                        <Form.Control type=\"text\" name=\"summary\" placeholder=\"Task Summary\" onChange={handleTaskFormChange} value={taskForm.summary}/>\n                        {hasUser ? null : <Form.Text className='invalid-input' style={{color: 'red'}} >You must enter a summary.</Form.Text>}\n                        <Form.Text className='invalid-input' >Task Details</Form.Text>\n                        <Form.Control as=\"textarea\" name=\"details\" placeholder=\"Task Details\" onChange={handleTaskFormChange} value={taskForm.details}/>\n                        {/* {hasUser ? null : <Form.Text className='invalid-input' style={{color: 'red'}} >You must enter a summary.</Form.Text>} */}\n                        <Form.Text className='invalid-input' >Task Category</Form.Text>\n                        <Form.Select name=\"category_id\" onChange={handleTaskFormChange}>\n                            <option>Choose a Category</option>\n                            {optionList}\n                        </Form.Select>\n                        {/* {hasUser ? null : <Form.Text className='invalid-input' style={{color: 'red'}} >You must enter a summary.</Form.Text>} */}\n                    </Form>                        \n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleCloseTaskForm}>\n                        Close\n                    </Button>\n                    <Button type=\"submit\" variant=\"primary\" onClick={submitTask}>\n                        Add Task\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </Container>\n    )\n}\n\nexport default Project;","import React, { useState } from \"react\";\nimport { Button, Container, Row, Modal, Form, Col } from \"react-bootstrap\"\n\nconst detailStyle = {\n    \"backgroundColor\": \"#354a38\",\n    \"width\": \"80vw\",\n    \"height\": \"40vh\",\n    \"border\": \"1px solid black\",\n    \"borderRadius\": \"15px\",\n    \"overflow\": \"hidden\",\n    \"padding\": \"15px\"\n}\n\nfunction Task({activeTask, setActiveTask, optionList}) {\n    const [showTaskform, setShowTaskForm] = useState(false)\n    const [hasSummary, setHasSummary] = useState(true)\n    const [taskUpdateForm, setTaskUpdateForm] = useState({\n        summary: '',\n        details: '',\n        category_name: '',\n        category_id: '',\n    })\n\n    function handleCloseTaskForm() {\n        setShowTaskForm(false)\n    }\n\n    function handleShowTaskForm() {\n        setTaskUpdateForm({\n            summary: activeTask.summary,\n            details: activeTask.details,\n            category_name: activeTask.category_name,\n            category_id: activeTask.category_id,\n        })\n        setShowTaskForm(true)\n    }\n\n    function changeTaskHandler(e) {\n        setTaskUpdateForm({...taskUpdateForm, [e.target.name]: e.target.value})\n    }\n\n    function submitTaskUpdate() {\n        console.log(activeTask)\n        if (taskUpdateForm.summary !== '') {\n            setActiveTask({...activeTask, \n                ['summary']: taskUpdateForm.summary,\n                ['details']: taskUpdateForm.details\n            })\n            fetch(`/tasks/${activeTask.id}`, {\n                method: 'PATCH',\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(taskUpdateForm)\n            })\n            .then(r => r.json())\n            .then(data => {\n                console.log(data)\n                handleCloseTaskForm()\n            })\n        } else {\n            console.log(\"cannot apply changes\")\n        }\n    }\n\n    return (\n        <Container className=\"task-cont\">\n            <Row>\n                <h3 className=\"my-4\">\n                    Task Summary: {activeTask.summary}\n                </h3>\n            </Row>\n            <Row>\n                <h4 className=\"my-4\">\n                    Category: {activeTask.category_name}\n                </h4>\n            </Row>\n            <Row>\n                <h4 className=\"my-4\">Details</h4>\n                <Container style={detailStyle}>\n                    {activeTask.details}\n                </Container>\n            </Row>\n            <Row>\n                <Col className=\"my-4 d-flex justify-content-end\">\n                    <Button onClick={handleShowTaskForm} >\n                        Edit Task\n                    </Button>\n                </Col>\n            </Row>\n\n            <Modal show={showTaskform} onHide={handleCloseTaskForm}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Edit Your Details</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={submitTaskUpdate}>\n                        <Form.Text className='invalid-input' >Task Summary</Form.Text>\n                        <Form.Control type=\"text\" name=\"summary\" placeholder=\"Task Summary\" onChange={changeTaskHandler} value={taskUpdateForm.summary}/>\n                        {hasSummary ? null : <Form.Text className='invalid-input' style={{color: 'red'}} >You must enter a summary.</Form.Text>}\n                        <Form.Text className='invalid-input' >Task Details</Form.Text>\n                        <Form.Control as=\"textarea\" name=\"details\" placeholder=\"Task Details\" onChange={changeTaskHandler} value={taskUpdateForm.details}/>\n                        <Form.Text className='invalid-input' >Task Category</Form.Text>\n                        <Form.Select name=\"category_id\" onChange={changeTaskHandler}>\n                            <option>Choose a Category</option>\n                            {optionList}\n                        </Form.Select>\n                    </Form>                        \n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleCloseTaskForm}>\n                        Close\n                    </Button>\n                    <Button type=\"submit\" variant=\"primary\" onClick={submitTaskUpdate}>\n                        Apply Changes\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </Container>\n    )\n}\n\nexport default Task;","import {useHistory} from \"react-router-dom\";\nimport {Navbar, Container, Nav, Offcanvas, Button} from 'react-bootstrap';\n\nfunction NavBar({user, setCurrentUser}) {\n    const history = useHistory();\n\n    const handleLogout = () => {\n        fetch('/logout', {method: \"DELETE\"})\n        .then(res => {\n              if (res.ok) {\n                history.push(\"/\");\n                setCurrentUser(null) \n              }\n            })\n    }\n\n    function homeButton() {\n       user ? history.push(\"/home\") : history.push('/')\n       history.go(0)\n    }\n\n    return(\n        <>\n            <Navbar style={{\"backgroundColor\": \"#59386e\"}} variant=\"dark\" expand={false}>\n                <Container fluid>\n                    {<Navbar.Brand onClick={homeButton}>KanbanD</Navbar.Brand>}\n                    <Navbar.Toggle aria-controls=\"offcanvasNavbar\" />\n                    <Navbar.Offcanvas\n                    id=\"offcanvasNavbar\"\n                    aria-labelledby=\"offcanvasNavbarLabel\"\n                    placement=\"end\"\n                    style={{\"backgroundColor\": \"#59386e\", \"color\": \"white\"}}\n                    >\n                    <Offcanvas.Header closeButton>\n                        <Offcanvas.Title id=\"offcanvasNavbarLabel\">KanbanD</Offcanvas.Title>\n                    </Offcanvas.Header>\n                    <Offcanvas.Body>\n                        <Nav className=\"justify-content-end flex-grow-1 pe-3\">\n                        {user ? <h4>Hello {user.username}!</h4> : null}\n                        {user ? <Button onClick={handleLogout}>Logout</Button> : null}\n                        </Nav>\n                    </Offcanvas.Body>\n                    </Navbar.Offcanvas>\n                </Container>\n            </Navbar>\n        </>\n    )\n}\n\nexport default NavBar;","import React, { useEffect, useState } from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Login from \"./Login\";\nimport Signup from \"./Signup\";\nimport ProjectsHome from \"./ProjectsHome\";\nimport Project from \"./Project\";\nimport Task from \"./Task\"\nimport NavBar from \"./NavBar\";\nimport useLocalStorage from \"./useLocalStorage\";\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState([])\n  const [userProjects, setUserProjects] = useState([])\n  const [activeProject, setActiveProject] = useLocalStorage('activeProject', [])\n  const [categories, setCategories] = useState([])\n  const [activeTask, setActiveTask] = useLocalStorage('activeTask', [])\n  const [taskList, setTaskList] = useLocalStorage('taskList', [])\n\n  useEffect(() => {\n    fetch(\"/me\")\n    .then((res) => {\n      if (res.ok) {\n        res.json()\n        .then(user => {\n          setCurrentUser(user)\n          setUserProjects(user?.projects)\n          console.log(user)\n        })\n      }\n    })\n    fetch('/categories')\n    .then(res => res.json())\n    .then(data => {\n      console.log(data)\n      setCategories(data)\n    })\n  }, [])\n\n  const optionList = categories.map(category => <option key={category.id} value={category.id}>{category.name}</option>)\n\n  function addNewProject(projectObj) {\n    setUserProjects([...userProjects, projectObj])\n  }\n\n  return (\n    <div className=\"App\">\n      <NavBar user={currentUser} setCurrentUser={setCurrentUser}/>\n      <Switch>\n        <Route exact path=\"/\">\n          <Login setCurrentUser={setCurrentUser} setUserProjects={setUserProjects} />\n        </Route>\n        <Route exact path=\"/signup\">\n          <Signup setCurrentUser={setCurrentUser}/>\n        </Route>\n        <Route exact path=\"/home\">\n          <ProjectsHome \n            currentUser={currentUser}\n            addNewProject={addNewProject}\n            userProjects={userProjects}\n            setUserProjects={setUserProjects}\n            setActiveProject={setActiveProject}\n            setTaskList={setTaskList} />\n        </Route>\n        <Route exact path=\"/project\">\n          <Project activeProject={activeProject} setActiveTask={setActiveTask} taskList={taskList} setTaskList={setTaskList} />\n        </Route>\n        <Route exact path=\"/task\">\n          <Task activeTask={activeTask} setActiveTask={setActiveTask} optionList={optionList} />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}